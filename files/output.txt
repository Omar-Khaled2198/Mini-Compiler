<INT>: int
<ID>: main
<LEFT_ROUND_B>: (
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<INT>: int
<ID>: y
<SEMICOLON>: ;
<ID>: y
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 5
<SEMICOLON>: ;
<INT>: int
<ID>: x
<SEMICOLON>: ;
<ID>: x
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 10
<SEMICOLON>: ;
<INT>: int
<ID>: sum
<SEMICOLON>: ;
<MULTI_COMMENT>: /*
        fsdfasdfasdf
    */
<IF>: if
<LEFT_ROUND_B>: (
<ID>: x
<LESSTHAN>: <
<ID>: y
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<ID>: sum
<ASSIGNMENT>: =
<ID>: x
<MINUS>: -
<ID>: y
<SEMICOLON>: ;
<RIGHT_CURLY_B>: }
<ELSE>: else
<LEFT_CURLY_B>: {
<ID>: sum
<ASSIGNMENT>: =
<ID>: y
<MINUS>: -
<ID>: x
<SEMICOLON>: ;
<RIGHT_CURLY_B>: }
<INT>: int
<ID>: total
<SEMICOLON>: ;
<ID>: total
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 20
<SEMICOLON>: ;
<WHILE>: while
<LEFT_ROUND_B>: (
<ID>: sum
<LESSTHAN>: <
<ID>: total
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<ID>: sum
<PLUS>: +
<PLUS>: +
<SEMICOLON>: ;
<RIGHT_CURLY_B>: }
<RIGHT_CURLY_B>: }
