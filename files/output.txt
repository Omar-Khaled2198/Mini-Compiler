<INT>: int
<ID>: x
<SEMICOLON>: ;
<INT>: int
<ID>: y
<LEFT_ROUND_B>: (
<INT>: int
<ID>: l
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<INT>: int
<ID>: fly
<SEMICOLON>: ;
<ID>: fly
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 5
<PLUS>: +
<INTEGRAL_LITERAL>: 10
<SEMICOLON>: ;
<ID>: fly
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 5
<PLUS>: +
<ID>: x
<SEMICOLON>: ;
<IF>: if
<LEFT_ROUND_B>: (
<ID>: x
<EQUAL>: ==
<INTEGRAL_LITERAL>: 5
<AND>: &&
<LEFT_ROUND_B>: (
<ID>: fly
<EQUAL>: ==
<ID>: x
<RIGHT_ROUND_B>: )
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<INT>: int
<ID>: h
<SEMICOLON>: ;
<ID>: h
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 0
<SEMICOLON>: ;
<RIGHT_CURLY_B>: }
<ELSE>: else
<LEFT_CURLY_B>: {
<INT>: int
<ID>: h
<SEMICOLON>: ;
<ID>: h
<ASSIGNMENT>: =
<INTEGRAL_LITERAL>: 5
<SEMICOLON>: ;
<RIGHT_CURLY_B>: }
<RIGHT_CURLY_B>: }
