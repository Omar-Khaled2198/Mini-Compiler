NEW \bnew\b
WHILE \bwhile\b
INT \bint\b
STRING \bString\b
FLOAT \bfloat\b
CHARACTER \bchar\b
BOOL \bbool\b
IF \bif\b
ELSE \belse\b
MAIN \bmain\b
PRIVATE \bprivate\b
CLASS \bclass\b
MULTI_COMMENT /\*(.|[\r\n])*\*/
INTEGRAL_LITERAL \b[1-9][0-9]*\b
STRING_LITERAL (\".*?(?<!\\)\")
TRUE \btrue\b
FALSE \bfalse\b
VOID \bvoid\b
PUBLIC \bpublic\b
PROTECTED \bprotected\b
static \bstatic\b
EXTERN \bextern\b
REGISTER \bregister\b
RETURN \breturn\b
ABSTRACT \babstract\b
BREAK \bbreak\b
CONTINUE \bcontinue\b
BYTE \bbyte\b
CASE \bcase\b
CATCH \bcatch\b
CONST \bconst\b
DEFAULT \bdefault\b
DO \bdo\b
DOUBLE \bdouble\b
ENUM \benum\b
FINAL \bfinal\b
FINALLY \bfinally\b
FOR \bfor\b
GOTO \bgoto\b
IMPLEMENTS \bimplements\b
IMPORT \bimport\b
PACKAGE \bpackage\b
INSTANCEOF \binstanceof\b
INTERFACE \binterface\b
SHORT \bshort\b
SUPER \bsuper\b
SWITCH \bswitch\b
THROW \bthrow\b
TRY \btry\b
PLUS \+
ASSIGNMENT \=
EQUAL \==
LEFT_CURLY_B \{
RIGHT_CURLY_B \}
LEFT_SQUARE_B \[
RIGHT_SQUARE_B \]
LEFT_ROUND_B \(
RIGHT_ROUND_B \)
COMMA ,
SEMICOLON ;
DOT \.
NOT !
PREPROCESSOR #
NOT_EQUAL \b!=\b
AND \b\&&\b
OR \b\|\|\b
MINUS \-
DIVIDE \/
MULTIPLY \*
MOD \%
LESS_THAN <
GREATER_THAN >
LESS_EQ \b<=\b
GREATER_EQ \b>=\b
ID \b[_a-zA-Z][_a-zA-Z0-9]{0,30}
EOL \n